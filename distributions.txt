"Linux distribution" is a bad term, because it encompasses several
types of derived system which really have different qualities.  

So we know that Debian, Gentoo, and Fedora are Linux "distributions".

Is Android a "distribution"?  Is TiVo a "distribution"?  If so, then
the characteristics in common are the presence of the Linux kernel and
some FOSS userspace components.

But what about OpenSolaris?  Is that a "distribution"?  It doesn't use
Linux obviously...so now we're down to "has some FOSS userspace" as
the definition of "distribution".

But then Microsoft Windows becomes a distribution, because it includes
some MIT licensed code.

At this point it should be obvious that we need different terminology.

I use these terms:

General Purpose Linux fork (distribution):
  A set of packages.

  A notable characteristic of a distribution is that there is usually
  no defined stability of the system; it devolves to "whatever
  upstream does".  So gtk+ and X11 are stable, most everything else is
  not.

  Why do I explicitly say "fork" here?  Well, you see "Arch Linux"
  randomly decided that /usr/bin/python is Python 3 one day, and I had
  enough.  But long before that, there are fundamental things like how
  shared libraries work (think multilib or /lib64) that *really
  matter* and are actually different.

  The LSB is notable as an attempt to bring some measure of sanity to
  the GP Linux fork market.

  Examples: Fedora, Debian, Ubuntu, Mandriva, etc. etc...

OS (Linux based):
  An operating system which uses Linux as a kernel and possibly
  parts of userland that's in use from the GP Linux forks.  

  The key characteristic of an *operating system* is that it has a
  well-defined API for applications to use that is stable.  So
  Microsoft Windows is clearly an OS.  Mac OS X is an OS, albeit one
  with a "mostly stable" API.

  Also in contrast to the GP Linux forks, these operating systems are
  usually *not* self hosting.

  Examples: WebOS, Android

embeds:
  Custom systems basically designed to run one application.
  Distinct from the first two as there is no application API.
  Most often generated by tools such as Yocto (however, note 
  that Yocto can also create operating systems too)

  Examples: TiVo, DD-WRT
