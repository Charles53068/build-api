Build API
Version: 0.2

== Motivations ==

What's wrong with ./configure && make && make install DESTDIR=/foo?

Nothing's exactly "wrong" with it in that it works now; but there are
things that can be improved.  For example, a main concern is that many
project consumers want to split between a "foo" package that only has
the runtime bits, and a "foo-devel" which has C library headers, etc.
This logic can live much more sanely upstream than reproduced over and
over in every downstream consumer.

Also, while the autotools are good, we don't need *every* feature they
have, and we don't want to force everyone to use them.  The Build API
defines the subset of the interface that anyone using an alternative
build system should implement.

== Build API ==

There MUST be at least these two files present: "configure" and "Makefile".
The following files are optional: "autogen" (or "autogen.sh").

configure
  This MUST be an executable file.  It MUST take the following arguments:
    --prefix=PATH
    --libdir=PATH
    CFLAGS=FLAGS
    CXXFLAGS=FLAGS

  Example: ./configure --prefix=/opt/build/ --libdir=/opt/build/lib64 CFLAGS='-ggdb -O2'

  It SHOULD take the following arguments:
    --build=HOST
    --host=HOST
  The semantics of these arguments are as defined by autoconf.  See "info autoconf",
  under the section "Hosts and Cross Compilation".

  The configure script MUST ignore unknown options that start with
  --enable- or --disable.  The rationale for this is the same as
  autotools, it allows one to have global effects without special
  casing each configure script over time.

Makefile:
  This MUST be a Makefile, as consumable by an implementation of "make" such
  as GNU Make.  It MUST have the following targets:

  all:
    Build all of the software.  This variable SHOULD accept a make variable
    called BUILDAPI_JOBS.  The BUILDAPI_JOBS variable specifies roughly how
    many concurrent processes or threads the build system should use.  It
    is however acceptable for the build system to invoke 
      sysconf (_SC_NPROCESSORS_ONLN)
    or a wrapper thereof as a basis as well.

  install: buildapi-install-runtime buildapi-install-devel
    This target MUST take an argument variable "DESTDIR" which
    specifies an additional file path prefix before the install path.
    It simply depends on buildapi-install-runtime and buildapi-install-devel.
  
    Example:  make install DESTDIR=/opt/build-daemon/work/pkgname/root
  
  buildapi-install-runtime:
    Install binaries, libraries, and data files intended to be present
    on all systems.

  buildapi-install-devel:
    Install header files, library symbolic links, and data files
    necessary for other software to consume your software.  This
    target MUST take an argument variable "DESTDIR" which specifies an
    additional file path prefix before the install path.

  Also, the following variables may be used to declare how this
  project supports builds.  Variables may be found in either Makefile
  or Makefile.in.  If both are present, the former takes precedence.

  .buildapi-no-builddir:
    The presence of this target declares that this project only works
     when srcdir == builddir.
  
  .buildapi-require-builddir:
    The presence of this target declares that this project ONLY works
     when srcdir != builddir.  Avoid this if you can.

  .NOTPARALLEL:
    This pseudo-target is taken from GNU Make.  Use this when for
    whatever reason, your makefile is not safe to run with the -j
    option for make.  Obviously, try to avoid using this; or
    alternatively, isolate the parts of your build which aren't
    parallelizable into a separate makefile.
  
autogen (or "autogen.sh"):
  If present, this file is an executable script which bootstraps
  the build system.  It will be executed before configure, if the
  configure script is not present.  For example, in autotools
  based systems, this will run a tool such as "autoreconf".

  This tool SHOULD NOT automatically run ./configure.  If for
  historical reasons it does, then it MUST honor an environment
  variable NOCONFIGURE, which if set, suppresses the ./configure run.
